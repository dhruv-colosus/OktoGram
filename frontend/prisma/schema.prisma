generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id
  email        String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  posts        Post[]
  Like         Like[]
  Tip          Tip[]
  Notification Notification[]
}

model Post {
  id           String        @id @default(uuid())
  content      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  authorId     String
  author       User          @relation(fields: [authorId], references: [id])
  GiveawayPost GiveawayPost?
  Like         Like[]
  Tip          Tip[]
}

model GiveawayPost {
  postId      String  @id
  likesNeeded Int
  seed        Bytes
  seedHash    String
  goalMet     Boolean @default(false)
  post        Post    @relation(fields: [postId], references: [id])
}

model Image {
  id      String @id @default(uuid())
  content String
}

model Like {
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  postId String

  @@id([userId, postId])
}

model Tip {
  id        String   @id
  from      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  network   String
  token     String
  amount    String
  postId    String
  userId    String
  createdAt DateTime @default(now())
}

model Notification {
  id      String  @id @default(uuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  seen    Boolean @default(false)
  content String
}
